<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | Robert Eshleman]]></title>
  <link href="http://blog.roberteshleman.com/categories/vim/atom.xml" rel="self"/>
  <link href="http://blog.roberteshleman.com/"/>
  <updated>2014-08-21T17:00:06-04:00</updated>
  <id>http://blog.roberteshleman.com/</id>
  <author>
    <name><![CDATA[Robert Eshleman]]></name>
    <email><![CDATA[hello@roberteshleman.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning to Work Efficiently With Vim]]></title>
    <link href="http://blog.roberteshleman.com/2014/07/18/learning-to-work-efficiently-with-vim/"/>
    <updated>2014-07-18T14:31:09-04:00</updated>
    <id>http://blog.roberteshleman.com/2014/07/18/learning-to-work-efficiently-with-vim</id>
    <content type="html"><![CDATA[<p><em>This summer, I&rsquo;m learning Ruby on Rails at <a href="http://www.thisismetis.com">Metis</a>, a 12-week class taught by some great folks from <a href="http://www.thoughtbot.com">thoughtbot</a>. This post is part of a series sharing my experience and some of the things I&rsquo;m learning.</em></p>

<p>Until a few months ago, <a href="http://en.wikipedia.org/wiki/Vim_%28text_editor%29">Vim</a> was a program I had never considered using. I had always perceived Vim to be an editor with a steep learning curve that wasn’t worth my time as a web programmer. It was a tool, I thought, used mostly by people who spent their time writing obscure shell scripts or coding the Linux kernel in C.</p>

<p>As it turns out, I was wrong, and I’m glad I was.</p>

<!-- More -->


<h2>Overcoming the Learning Curve</h2>

<p>Now, that’s not to say that Vim’s learning curve isn’t steep — the program can be notoriously unforgiving to a new user. But once I learned a few basic commands to move around, and understood the <a href="http://vimdoc.sourceforge.net/htmldoc/intro.html#vim-modes-intro">different modes</a>, Vim became much easier to work with.</p>

<p>Encouraged by one of my instructors at Metis, I spent up to an hour at the beginning of each day practicing with <a href="http://linuxcommand.org/man_pages/vimtutor1.html">vimtutor</a>. (There are also a number of <a href="http://vim-adventures.com/">web-based</a> <a href="http://www.openvim.com/tutorial.html">tutorials</a>, and this <a href="http://www.viemu.com/vi-vim-cheat-sheet.gif">keyboard layout cheat-sheet</a>.)</p>

<p>After using vimtutor each morning, I then challenged myself to code in Vim throughout the day. At first, I worked much more slowly as I learned different commands and occasionally googled for help. After a few days, though, I could tell that I was beginning to get the hang of it. It was amazing to see the impact of using they keyboard to navigate, without switching over to the mouse every few minutes.</p>

<h2>Hard Work’s Rewards</h2>

<p>Having now spent a few months using Vim, I’m really beginning to appreciate its power. Using <a href="https://code.google.com/p/macvim/">MacVim</a> and a few extensions (for syntax highlighting, file-switching, <em>et al.</em>), I now have most of the key features of a text editor like <a href="http://www.sublimetext.com/">Sublime</a> and still have the additional power of Vim. Overall, my workflow is much more efficient.</p>

<p>Needless to say, Vim has quickly become an indispensable tool, even (especially?) for a web developer like me.</p>

<h2>A Not-Nearly-Exhaustive List of Vim Magic</h2>

<p>Below are just a few of the Vim shortcuts that I’ve found especially useful as I’ve been learning Rails.</p>

<h3>Vanilla Vim Shortcuts</h3>

<ul>
<li><code>c</code> is for “change”; it deletes in the given direction then enters insert mode (i.e., <code>cw</code> to change to the end of the word, or <code>c$</code> to change to the end of the line)</li>
<li><code>d</code> deletes in the given direction (i.e., <code>dw</code> to delete to the end of the word); <code>D</code> deletes to the end of the line</li>
<li><code>o</code> places you in insert mode in a new line below the current line; <code>O</code> does the same above the current line</li>
<li><code>:!</code> lets you run a terminal command from within Vim, helpful for running Ruby files (like <code>:!rb filename.rb</code>)</li>
<li><code>=</code> automatically indents lines in the given direction. <code>gg=G</code> automatically indents the whole file.</li>
</ul>


<h3>Multi-Window Commnds</h3>

<ul>
<li><code>:split</code> for a horizontal window split (optionally append a filename to open)</li>
<li><code>:vsplit</code> for a vertical window split (optionally append a filename to open)</li>
<li><code>Ctl-W</code> commands allow moving between split windows</li>
<li><code>Ctl-W Ctl-W</code> switches between active split windows</li>
<li><code>Ctl-W [h,j,k,l]</code> moves to the split window in the given direction</li>
</ul>


<h3>Vim Rails Magic</h3>

<p><em>This magic comes courtesy of the <code>rails.vim</code> extension, available <a href="https://github.com/tpope/vim-rails">here</a>.</em></p>

<ul>
<li><code>:Rinitializer</code> jumps to the routes file</li>
<li><code>:Rmigration</code> jumps to the most recent migration file</li>
<li><code>:R</code> from inside a view jumps you to the corresponding action within the appropriate controller and vice-versa</li>
<li><code>:Rcontroller wombats</code> jumps to the “wombats” controller</li>
<li><code>:Rview wombats/index.html.erb</code> does the same for the view</li>
<li><code>:Rmodel wombat</code> does the same for the model</li>
<li>Append <code>!</code> to any of the last three to create the file with a boilerplate class definition</li>
</ul>


<h3>File Switching</h3>

<ul>
<li><code>:e</code> followed by a path/filename switches to a different file</li>
<li><code>Ctl-p</code> (via this <a href="https://github.com/kien/ctrlp.vim">extension</a>) has been a <strong>huge</strong> time-saver with its fuzzy filename matching.</li>
</ul>


<h3>Others?</h3>

<p>This is just a short list. Feel fee to tweet me your other favorites <a href="https://twitter.com/RobertEshleman">@RobertEshleman</a> or comment below. =)</p>
]]></content>
  </entry>
  
</feed>
